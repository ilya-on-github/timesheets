// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Timesheets.Jira.Persistence;

namespace Timesheets.Jira.Persistence.Migrations.PostgreSQL
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200813220318_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Timesheets.Jira.Persistence.Models.DbAccount", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("Checked")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("boolean");

                    b.Property<string>("Key")
                        .HasColumnType("character varying(32)")
                        .HasMaxLength(32);

                    b.Property<string>("Name")
                        .HasColumnType("character varying(128)")
                        .HasMaxLength(128);

                    b.Property<DateTimeOffset>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Timesheets.Jira.Persistence.Models.DbIssue", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("AccountKey")
                        .HasColumnType("character varying(32)")
                        .HasMaxLength(32);

                    b.Property<string>("Key")
                        .HasColumnType("character varying(32)")
                        .HasMaxLength(32);

                    b.Property<string>("Summary")
                        .HasColumnType("character varying(1024)")
                        .HasMaxLength(1024);

                    b.HasKey("Id");

                    b.ToTable("Issues");
                });

            modelBuilder.Entity("Timesheets.Jira.Persistence.Models.DbWorklog", b =>
                {
                    b.Property<int>("TempoWorklogId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("Checked")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("boolean");

                    b.Property<int>("IssueId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("Started")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TimeSpentSeconds")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Worker")
                        .HasColumnType("character varying(128)")
                        .HasMaxLength(128);

                    b.HasKey("TempoWorklogId");

                    b.HasIndex("IssueId");

                    b.ToTable("Worklogs");
                });

            modelBuilder.Entity("Timesheets.Jira.Persistence.Models.DbWorklog", b =>
                {
                    b.HasOne("Timesheets.Jira.Persistence.Models.DbIssue", "Issue")
                        .WithMany()
                        .HasForeignKey("IssueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
